version: "3.8"

services:

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookstore
    ports:
      - "5433:5432" # Expose for local pgAdmin access
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=http://user-service:8002
      - BOOK_SERVICE_URL=http://book-service:8000
      - ORDER_SERVICE_URL=http://order-service:8081
      - JWT_SECRET=super-secret-key
    depends_on:
      - user-service
      - book-service
      - order-service

  book-service:
    build:
      context: ./book-service
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - DB_URL=postgres://user:password@postgres:5432/bookstore?sslmode=disable

  order-service:
    build:
      context: ./order-service
    ports:
      - "8001:8081" # Map external 8001 to internal 8081
    depends_on:
      - book-service
      - rabbitmq # Add dependency on RabbitMQ
    environment:
      - BOOK_SERVICE_URL=http://book-service:8000

  user-service:
    build:
      context: ./user-service
    ports:
      - "8002:8002"
    environment:
      - JWT_SECRET=super-secret-key

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  notification-service:
    build:
      context: ./notification-service
    depends_on:
      - rabbitmq

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway

volumes:
  postgres_data:
  rabbitmq_data:
  